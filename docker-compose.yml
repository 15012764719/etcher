version: '2'
volumes:
    data:
    netdatalib:
    netdatacache:
services:
  influxdb:
    restart: always
    build: ./etcher-pro-monitoring/influxdb
    network_mode: host
    volumes:
      - 'data:/data'
  grafana:
    restart: always
    build: ./etcher-pro-monitoring/grafana
    network_mode: host
    volumes:
      - 'data:/data'
    environment:
        - 'GF_SERVER_HTTP_PORT=80'
        - 'GF_PATHS_PROVISIONING=/usr/src/app/provisioning'
        - 'GF_SESSION_PROVIDER=memory'
  collectd:
    build: ./etcher-pro-monitoring/collectd
    privileged: true
    restart: always
    network_mode: host
  beep:
    build: ./etcher-pro-monitoring/beep
    privileged: true
    restart: no
  benchmark:
    build: ./etcher-pro-monitoring/benchmark
    privileged: true
    restart: always
  etcher:
    build: .
    privileged: true
    restart: always
    network_mode: host
    labels:
      io.balena.features.dbus: 1
  netdata:
    build: ./etcher-pro-monitoring/netdata
    # this could be removed if we could simply use env vars in our configuration (only to pass in supervisor API URL)
    network_mode: 'host'
    ports:
      - '19999:19999'
    environment:
      - PGID=988
        # we get this injected as unix:///...sock, but netdata doesn't like that
      - DOCKER_HOST=/var/run/balena-engine.sock
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.supervisor-api: 1
      io.balena.features.sysfs: 1
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
